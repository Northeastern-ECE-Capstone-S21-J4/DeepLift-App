{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/630556369qqcom/Desktop/DeepLift-App/navigation/AppNavigator.js\";\n\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport { connect } from \"react-redux\";\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createReactNavigationReduxMiddleware, createReduxContainer } from \"react-navigation-redux-helpers\";\nimport LoginScreen from \"../screens/Login\";\nimport SignupScreen from \"../screens/Signup\";\nimport WelcomeScreen from \"../screens/WelcomeScreen\";\nimport React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { PastWorkoutsStackNavigator, MainStackNavigator, ProfileStackNavigator } from \"./StackNavigator\";\nvar Tab = createBottomTabNavigator();\n\nvar TabNavigator = function TabNavigator() {\n  return React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n          console.log();\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (route.name === 'Profile') {\n            iconName = focused ? 'person-circle' : 'person-circle-outline';\n          } else if (route.name === 'Past Workouts') {\n            iconName = focused ? 'barbell' : 'barbell-outline';\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 16\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: '#9AC4F8',\n      inactiveTintColor: 'gray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Past Workouts\",\n    component: PastWorkoutsStackNavigator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: MainStackNavigator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Profile\",\n    component: ProfileStackNavigator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar noTransitionConfig = function noTransitionConfig() {\n  return {\n    transitionSpec: {\n      duration: 0,\n      timing: Animated.timing,\n      easing: Easing.step0\n    }\n  };\n};\n\nvar middleware = createReactNavigationReduxMiddleware(function (state) {\n  return state.nav;\n});\nvar LoginStack = createStackNavigator({\n  Login: {\n    screen: LoginScreen\n  },\n  Signup: {\n    screen: SignupScreen\n  },\n  Welcome: {\n    screen: WelcomeScreen\n  }\n}, {\n  initialRouteName: \"Welcome\",\n  headerMode: \"float\",\n  navigationOptions: function navigationOptions(_ref3) {\n    var navigation = _ref3.navigation;\n    return {\n      headerTintColor: \"red\",\n      headerTitleStyle: styles.headerTitleStyle\n    };\n  },\n  cardStyle: {\n    backgroundColor: \"#FFFFFF\"\n  }\n});\nvar RootNavigator = createStackNavigator({\n  LoginStack: {\n    screen: LoginStack\n  },\n  TabNavigator: {\n    screen: TabNavigator\n  }\n}, {\n  headerMode: \"none\",\n  initialRouteName: \"TabNavigator\",\n  transitionConfig: noTransitionConfig,\n  navigationOptions: function navigationOptions(_ref4) {\n    var navigation = _ref4.navigation;\n    return {\n      color: \"black\"\n    };\n  }\n});\nvar AppWithNavigationState = createReduxContainer(RootNavigator, \"root\");\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state.nav\n  };\n};\n\nvar AppNavigator = connect(mapStateToProps)(AppWithNavigationState);\nexport { RootNavigator, AppNavigator, middleware };","map":{"version":3,"sources":["/Users/630556369qqcom/Desktop/DeepLift-App/navigation/AppNavigator.js"],"names":["connect","createStackNavigator","createReactNavigationReduxMiddleware","createReduxContainer","LoginScreen","SignupScreen","WelcomeScreen","React","createBottomTabNavigator","Ionicons","PastWorkoutsStackNavigator","MainStackNavigator","ProfileStackNavigator","Tab","TabNavigator","route","tabBarIcon","focused","color","size","iconName","console","log","name","activeTintColor","inactiveTintColor","noTransitionConfig","transitionSpec","duration","timing","Animated","easing","Easing","step0","middleware","state","nav","LoginStack","Login","screen","Signup","Welcome","initialRouteName","headerMode","navigationOptions","navigation","headerTintColor","headerTitleStyle","styles","cardStyle","backgroundColor","RootNavigator","transitionConfig","AppWithNavigationState","mapStateToProps","AppNavigator"],"mappings":";;;;;AACA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAAQC,oBAAR,QAAmC,wBAAnC;AACA,SAASC,oCAAT,EAA+CC,oBAA/C,QACe,gCADf;AAEA,OAAOC,WAAP;AACA,OAAOC,YAAP;AACA,OAAOC,aAAP;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,0BAAT,EAAqCC,kBAArC,EAAyDC,qBAAzD;AAEA,IAAMC,GAAG,GAAGL,wBAAwB,EAApC;;AAEA,IAAMM,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,SACE,oBAAC,GAAD,CAAK,SAAL;AAAgB,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC7CC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AACxC,cAAIC,QAAJ;AACAC,UAAAA,OAAO,CAACC,GAAR;;AACA,cAAIP,KAAK,CAACQ,IAAN,KAAe,MAAnB,EAA2B;AACzBH,YAAAA,QAAQ,GAAGH,OAAO,GAAG,MAAH,GAAY,cAA9B;AACD,WAFD,MAEO,IAAIF,KAAK,CAACQ,IAAN,KAAe,SAAnB,EAA8B;AACnCH,YAAAA,QAAQ,GAAGH,OAAO,GAAG,eAAH,GAAqB,uBAAvC;AACD,WAFM,MAEA,IAAIF,KAAK,CAACQ,IAAN,KAAe,eAAnB,EAAoC;AACzCH,YAAAA,QAAQ,GAAGH,OAAO,GAAG,SAAH,GAAe,iBAAjC;AACD;;AACD,iBAAO,oBAAC,QAAD;AAAU,YAAA,IAAI,EAAEG,QAAhB;AAA0B,YAAA,IAAI,EAAED,IAAhC;AAAsC,YAAA,KAAK,EAAED,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AAZ4C,OAAhB;AAAA,KAA/B;AAcA,IAAA,aAAa,EAAE;AACbM,MAAAA,eAAe,EAAE,SADJ;AAEbC,MAAAA,iBAAiB,EAAE;AAFN,KAdf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAkBE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,eAAjB;AAAiC,IAAA,SAAS,EAAEf,0BAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,EAmBE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAwB,IAAA,SAAS,EAAEC,kBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,EAoBE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,SAAjB;AAA2B,IAAA,SAAS,EAAEC,qBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CADF;AAwBD,CAzBD;;AA2BA,IAAMc,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SAAO;AAC9BC,IAAAA,cAAc,EAAE;AACdC,MAAAA,QAAQ,EAAE,CADI;AAEdC,MAAAA,MAAM,EAAEC,QAAQ,CAACD,MAFH;AAGdE,MAAAA,MAAM,EAAEC,MAAM,CAACC;AAHD;AADc,GAAP;AAAA,CAA3B;;AAQE,IAAMC,UAAU,GAAGhC,oCAAoC,CACrD,UAAAiC,KAAK;AAAA,SAAIA,KAAK,CAACC,GAAV;AAAA,CADgD,CAAvD;AAKF,IAAMC,UAAU,GAAGpC,oBAAoB,CACnC;AACEqC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,MAAM,EAAEnC;AAAV,GADT;AAEEoC,EAAAA,MAAM,EAAE;AAAED,IAAAA,MAAM,EAAElC;AAAV,GAFV;AAGEoC,EAAAA,OAAO,EAAE;AAAEF,IAAAA,MAAM,EAAEjC;AAAV;AAHX,CADmC,EAMnC;AACEoC,EAAAA,gBAAgB,EAAE,SADpB;AAEEC,EAAAA,UAAU,EAAE,OAFd;AAGEC,EAAAA,iBAAiB,EAAE;AAAA,QAAGC,UAAH,SAAGA,UAAH;AAAA,WAAqB;AACtCC,MAAAA,eAAe,EAAE,KADqB;AAEtCC,MAAAA,gBAAgB,EAAEC,MAAM,CAACD;AAFa,KAArB;AAAA,GAHrB;AAOEE,EAAAA,SAAS,EAAE;AAAEC,IAAAA,eAAe,EAAE;AAAnB;AAPb,CANmC,CAAvC;AAkBA,IAAMC,aAAa,GAAGlD,oBAAoB,CACtC;AACEoC,EAAAA,UAAU,EAAE;AAAEE,IAAAA,MAAM,EAAEF;AAAV,GADd;AAEEvB,EAAAA,YAAY,EAAE;AAAEyB,IAAAA,MAAM,EAAEzB;AAAV;AAFhB,CADsC,EAKtC;AAEE6B,EAAAA,UAAU,EAAE,MAFd;AAGED,EAAAA,gBAAgB,EAAE,cAHpB;AAIEU,EAAAA,gBAAgB,EAAE1B,kBAJpB;AAKEkB,EAAAA,iBAAiB,EAAE;AAAA,QAAGC,UAAH,SAAGA,UAAH;AAAA,WAAqB;AACtC3B,MAAAA,KAAK,EAAE;AAD+B,KAArB;AAAA;AALrB,CALsC,CAA1C;AAgBA,IAAMmC,sBAAsB,GAAGlD,oBAAoB,CAACgD,aAAD,EAAgB,MAAhB,CAAnD;;AAEA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAAnB,KAAK;AAAA,SAAK;AAChCA,IAAAA,KAAK,EAAEA,KAAK,CAACC;AADmB,GAAL;AAAA,CAA7B;;AAIA,IAAMmB,YAAY,GAAGvD,OAAO,CAACsD,eAAD,CAAP,CAAyBD,sBAAzB,CAArB;AAGA,SAASF,aAAT,EAAwBI,YAAxB,EAAsCrB,UAAtC","sourcesContent":["import { Animated, Easing} from \"react-native\";\nimport { connect } from \"react-redux\";\nimport {createStackNavigator} from 'react-navigation-stack'\nimport { createReactNavigationReduxMiddleware, createReduxContainer \n        } from \"react-navigation-redux-helpers\";\nimport LoginScreen from \"../screens/Login\";\nimport SignupScreen from \"../screens/Signup\";\nimport WelcomeScreen from \"../screens/WelcomeScreen\";\n\n\nimport React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport { PastWorkoutsStackNavigator, MainStackNavigator, ProfileStackNavigator } from './StackNavigator'\n\nconst Tab = createBottomTabNavigator();\n\nconst TabNavigator = () => {\n  return (\n    <Tab.Navigator  screenOptions={({ route }) => ({\n      tabBarIcon: ({ focused, color, size }) => {\n        let iconName;\n        console.log();\n        if (route.name === 'Home') {\n          iconName = focused ? 'home' : 'home-outline';\n        } else if (route.name === 'Profile') {\n          iconName = focused ? 'person-circle' : 'person-circle-outline';\n        } else if (route.name === 'Past Workouts') {\n          iconName = focused ? 'barbell' : 'barbell-outline';\n        }\n        return <Ionicons name={iconName} size={size} color={color} />;\n      },\n    })}\n    tabBarOptions={{\n      activeTintColor: '#9AC4F8',\n      inactiveTintColor: 'gray',\n    }}>\n      <Tab.Screen name=\"Past Workouts\" component={PastWorkoutsStackNavigator} />\n      <Tab.Screen name=\"Home\" component={MainStackNavigator} />\n      <Tab.Screen name=\"Profile\" component={ProfileStackNavigator} />\n    </Tab.Navigator>\n  );\n}\n\nconst noTransitionConfig = () => ({\n    transitionSpec: {\n      duration: 0,\n      timing: Animated.timing,\n      easing: Easing.step0\n    }\n  });\n\n  const middleware = createReactNavigationReduxMiddleware(\n    state => state.nav\n  );\n\n  // Login stack\nconst LoginStack = createStackNavigator(\n    {\n      Login: { screen: LoginScreen },\n      Signup: { screen: SignupScreen },\n      Welcome: { screen: WelcomeScreen }\n    },\n    {\n      initialRouteName: \"Welcome\",\n      headerMode: \"float\",\n      navigationOptions: ({ navigation }) => ({\n        headerTintColor: \"red\",\n        headerTitleStyle: styles.headerTitleStyle\n      }),\n      cardStyle: { backgroundColor: \"#FFFFFF\" }\n    }\n  );\n\n// Manifest of possible screens\nconst RootNavigator = createStackNavigator(\n    {\n      LoginStack: { screen: LoginStack },\n      TabNavigator: { screen: TabNavigator }\n    },\n    {\n      // Default config for all screens\n      headerMode: \"none\",\n      initialRouteName: \"TabNavigator\",\n      transitionConfig: noTransitionConfig,\n      navigationOptions: ({ navigation }) => ({\n        color: \"black\"\n      })\n    }\n  );\n\nconst AppWithNavigationState = createReduxContainer(RootNavigator, \"root\");\n\nconst mapStateToProps = state => ({\n  state: state.nav\n});\n\nconst AppNavigator = connect(mapStateToProps)(AppWithNavigationState);\n\n\nexport { RootNavigator, AppNavigator, middleware };"]},"metadata":{},"sourceType":"module"}