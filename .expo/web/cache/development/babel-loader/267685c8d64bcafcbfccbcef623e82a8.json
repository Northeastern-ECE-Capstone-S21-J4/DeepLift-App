{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/630556369qqcom/Desktop/DeepLift-App/screens/Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Button from \"react-native-button\";\nimport { AppStyles } from \"../AppStyles\";\nimport firebase from '@react-native-firebase/app';\nimport auth from '@react-native-firebase/auth';\nimport firestore from '@react-native-firebase/firestore';\nimport { GoogleSignin, GoogleSigninButton } from \"react-native-google-signin\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\n\nvar FBSDK = require(\"react-native-fbsdk\");\n\nvar LoginManager = FBSDK.LoginManager,\n    AccessToken = FBSDK.AccessToken;\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onPressLogin = function () {\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n\n      if (email.length <= 0 || password.length <= 0) {\n        alert(\"Please fill out the required fields.\");\n        return;\n      }\n\n      auth().signInWithEmailAndPassword(email, password).then(function (response) {\n        var navigation = _this.props.navigation;\n        user_uid = response.user._user.uid;\n        firestore().collection(\"users\").doc(user_uid).get().then(function (user) {\n          if (user.exists) {\n            AsyncStorage.setItem(\"@loggedInUserID:id\", user_uid);\n            AsyncStorage.setItem(\"@loggedInUserID:key\", email);\n            AsyncStorage.setItem(\"@loggedInUserID:password\", password);\n            navigation.dispatch({\n              type: \"Login\",\n              user: user\n            });\n          } else {\n            alert(\"User does not exist. Please try again.\");\n          }\n        }).catch(function (error) {\n          var code = error.code,\n              message = error.message;\n          alert(message);\n        });\n      }).catch(function (error) {\n        var code = error.code,\n            message = error.message;\n        alert(message);\n      });\n    };\n\n    _this.onPressFacebook = function () {\n      LoginManager.logInWithPermissions([\"public_profile\", \"user_friends\", \"email\"]).then(function (result) {\n        if (result.isCancelled) {\n          alert(\"Whoops!\", \"You cancelled the sign in.\");\n        } else {\n          AccessToken.getCurrentAccessToken().then(function (data) {\n            var credential = firebase.auth.FacebookAuthProvider.credential(data.accessToken);\n            var accessToken = data.accessToken;\n            auth().signInWithCredential(credential).then(function (result) {\n              var user = result.user;\n              AsyncStorage.setItem(\"@loggedInUserID:facebookCredentialAccessToken\", accessToken);\n              AsyncStorage.setItem(\"@loggedInUserID:id\", user.uid);\n              var userDict = {\n                id: user.uid,\n                fullname: user.displayName,\n                email: user.email,\n                profileURL: user.photoURL\n              };\n\n              var data = _objectSpread(_objectSpread({}, userDict), {}, {\n                appIdentifier: \"rn-android-universal-listings\"\n              });\n\n              firestore().collection(\"users\").doc(user.uid).set(data);\n\n              _this.props.navigation.dispatch({\n                type: \"Login\",\n                user: userDict\n              });\n            }).catch(function (error) {\n              alert(\"Please try again! \" + error);\n            });\n          });\n        }\n      }, function (error) {\n        Alert.alert(\"Sign in error\", error);\n      });\n    };\n\n    _this.onPressGoogle = function () {\n      _this.setState({\n        loading: true\n      });\n\n      GoogleSignin.signIn().then(function (data) {\n        console.log(\"data\", data);\n        var credential = firebase.auth.GoogleAuthProvider.credential(data.idToken);\n        var accessToken = data.idToken;\n        AsyncStorage.setItem(\"@loggedInUserID:googleCredentialAccessToken\", accessToken);\n        return auth().signInWithCredential(credential);\n      }).then(function (result) {\n        _this.setState({\n          loading: false\n        });\n\n        var user = result.user;\n        AsyncStorage.setItem(\"@loggedInUserID:id\", user.uid);\n        var userDict = {\n          id: user.uid,\n          fullname: user.displayName,\n          email: user.email,\n          photoURL: user.photoURL\n        };\n\n        var data = _objectSpread(_objectSpread({}, userDict), {}, {\n          appIdentifier: \"rn-android-universal-listings\"\n        });\n\n        console.log(\"data\", data);\n        firestore().collection(\"users\").doc(user.uid).set(data);\n\n        _this.props.navigation.dispatch({\n          type: \"Login\",\n          user: userDict\n        });\n      }).catch(function (error) {\n        var code = error.code,\n            message = error.message;\n\n        _this.setState({\n          loading: false\n        }, function () {\n          alert(error);\n        });\n      });\n    };\n\n    _this.state = {\n      loading: false,\n      email: \"\",\n      password: \"\"\n    };\n    GoogleSignin.configure({\n      webClientId: \"706061484183-l0l58dds4kg329fh1trbiha1ci5rqm5n.apps.googleusercontent.com\"\n    });\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: [styles.title, styles.leftTitle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }\n      }, \"Sign In\"), React.createElement(View, {\n        style: styles.InputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.body,\n        placeholder: \"E-mail or phone number\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        value: this.state.email,\n        placeholderTextColor: AppStyles.color.grey,\n        underlineColorAndroid: \"transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.InputContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.body,\n        secureTextEntry: true,\n        placeholder: \"Password\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        value: this.state.password,\n        placeholderTextColor: AppStyles.color.grey,\n        underlineColorAndroid: \"transparent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }\n      })), React.createElement(Button, {\n        containerStyle: styles.loginContainer,\n        style: styles.loginText,\n        onPress: function onPress() {\n          return _this2.onPressLogin();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }\n      }, \"Log in\"), React.createElement(Text, {\n        style: styles.or,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }\n      }, \"OR\"), React.createElement(Button, {\n        containerStyle: styles.facebookContainer,\n        style: styles.facebookText,\n        onPress: function onPress() {\n          return _this2.onPressFacebook();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }\n      }, \"Login with Facebook\"), this.state.loading ? React.createElement(ActivityIndicator, {\n        style: {\n          marginTop: 30\n        },\n        size: \"large\",\n        animating: this.state.loading,\n        color: AppStyles.color.tint,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }\n      }) : React.createElement(GoogleSigninButton, {\n        style: styles.googleContainer,\n        size: GoogleSigninButton.Size.Wide,\n        color: GoogleSigninButton.Color.Light,\n        onPress: this.onPressGoogle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  or: {\n    fontFamily: AppStyles.fontName.main,\n    color: \"black\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  title: {\n    fontSize: AppStyles.fontSize.title,\n    fontWeight: \"bold\",\n    color: AppStyles.color.tint,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  leftTitle: {\n    alignSelf: \"stretch\",\n    textAlign: \"left\",\n    marginLeft: 20\n  },\n  content: {\n    paddingLeft: 50,\n    paddingRight: 50,\n    textAlign: \"center\",\n    fontSize: AppStyles.fontSize.content,\n    color: AppStyles.color.text\n  },\n  loginContainer: {\n    width: AppStyles.buttonWidth.main,\n    backgroundColor: AppStyles.color.tint,\n    borderRadius: AppStyles.borderRadius.main,\n    padding: 10,\n    marginTop: 30\n  },\n  loginText: {\n    color: AppStyles.color.white\n  },\n  placeholder: {\n    fontFamily: AppStyles.fontName.text,\n    color: \"red\"\n  },\n  InputContainer: {\n    width: AppStyles.textInputWidth.main,\n    marginTop: 30,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: AppStyles.color.grey,\n    borderRadius: AppStyles.borderRadius.main\n  },\n  body: {\n    height: 42,\n    paddingLeft: 20,\n    paddingRight: 20,\n    color: AppStyles.color.text\n  },\n  facebookContainer: {\n    width: 192,\n    backgroundColor: AppStyles.color.facebook,\n    borderRadius: AppStyles.borderRadius.main,\n    padding: 10,\n    marginTop: 30\n  },\n  facebookText: {\n    color: AppStyles.color.white\n  },\n  googleContainer: {\n    width: 192,\n    height: 48,\n    marginTop: 30\n  },\n  googleText: {\n    color: AppStyles.color.white\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/630556369qqcom/Desktop/DeepLift-App/screens/Login.js"],"names":["React","Button","AppStyles","firebase","auth","firestore","GoogleSignin","GoogleSigninButton","AsyncStorage","FBSDK","require","LoginManager","AccessToken","LoginScreen","props","onPressLogin","state","email","password","length","alert","signInWithEmailAndPassword","then","response","navigation","user_uid","user","_user","uid","collection","doc","get","exists","setItem","dispatch","type","catch","error","code","message","onPressFacebook","logInWithPermissions","result","isCancelled","getCurrentAccessToken","data","credential","FacebookAuthProvider","accessToken","signInWithCredential","userDict","id","fullname","displayName","profileURL","photoURL","appIdentifier","set","Alert","onPressGoogle","setState","loading","signIn","console","log","GoogleAuthProvider","idToken","configure","webClientId","styles","container","title","leftTitle","InputContainer","body","text","color","grey","loginContainer","loginText","or","facebookContainer","facebookText","marginTop","tint","googleContainer","Size","Wide","Color","Light","Component","StyleSheet","create","flex","alignItems","fontFamily","fontName","main","marginBottom","fontSize","fontWeight","alignSelf","textAlign","marginLeft","content","paddingLeft","paddingRight","width","buttonWidth","backgroundColor","borderRadius","padding","white","placeholder","textInputWidth","borderWidth","borderStyle","borderColor","height","facebook","googleText"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AASA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,SAAT;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,SAASC,YAAT,EAAuBC,kBAAvB,QAAiD,4BAAjD;SACSC,Y;;AACT,IAAMC,KAAK,GAAGC,OAAO,CAAC,oBAAD,CAArB;;IACQC,Y,GAA8BF,K,CAA9BE,Y;IAAcC,W,GAAgBH,K,CAAhBG,W;;IAEhBC,W;;;;;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAanBC,YAbmB,GAaJ,YAAM;AAAA,wBACS,MAAKC,KADd;AAAA,UACXC,KADW,eACXA,KADW;AAAA,UACJC,QADI,eACJA,QADI;;AAEnB,UAAID,KAAK,CAACE,MAAN,IAAgB,CAAhB,IAAqBD,QAAQ,CAACC,MAAT,IAAmB,CAA5C,EAA+C;AAC7CC,QAAAA,KAAK,CAAC,sCAAD,CAAL;AACA;AACD;;AACDhB,MAAAA,IAAI,GACDiB,0BADH,CAC8BJ,KAD9B,EACqCC,QADrC,EAEGI,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAAA,YACRC,UADQ,GACO,MAAKV,KADZ,CACRU,UADQ;AAEhBC,QAAAA,QAAQ,GAAGF,QAAQ,CAACG,IAAT,CAAcC,KAAd,CAAoBC,GAA/B;AACAvB,QAAAA,SAAS,GACNwB,UADH,CACc,OADd,EAEGC,GAFH,CAEOL,QAFP,EAGGM,GAHH,GAIGT,IAJH,CAIQ,UAASI,IAAT,EAAe;AACnB,cAAIA,IAAI,CAACM,MAAT,EAAiB;AACfxB,YAAAA,YAAY,CAACyB,OAAb,CAAqB,oBAArB,EAA2CR,QAA3C;AACAjB,YAAAA,YAAY,CAACyB,OAAb,CAAqB,qBAArB,EAA4ChB,KAA5C;AACAT,YAAAA,YAAY,CAACyB,OAAb,CAAqB,0BAArB,EAAiDf,QAAjD;AACAM,YAAAA,UAAU,CAACU,QAAX,CAAoB;AAAEC,cAAAA,IAAI,EAAE,OAAR;AAAiBT,cAAAA,IAAI,EAAEA;AAAvB,aAApB;AACD,WALD,MAKO;AACLN,YAAAA,KAAK,CAAC,wCAAD,CAAL;AACD;AACF,SAbH,EAcGgB,KAdH,CAcS,UAASC,KAAT,EAAgB;AAAA,cACbC,IADa,GACKD,KADL,CACbC,IADa;AAAA,cACPC,OADO,GACKF,KADL,CACPE,OADO;AAErBnB,UAAAA,KAAK,CAACmB,OAAD,CAAL;AACD,SAjBH;AAkBD,OAvBH,EAwBGH,KAxBH,CAwBS,UAAAC,KAAK,EAAI;AAAA,YACNC,IADM,GACYD,KADZ,CACNC,IADM;AAAA,YACAC,OADA,GACYF,KADZ,CACAE,OADA;AAEdnB,QAAAA,KAAK,CAACmB,OAAD,CAAL;AAID,OA9BH;AA+BD,KAlDkB;;AAAA,UAoDnBC,eApDmB,GAoDD,YAAM;AACtB7B,MAAAA,YAAY,CAAC8B,oBAAb,CAAkC,CAChC,gBADgC,EAEhC,cAFgC,EAGhC,OAHgC,CAAlC,EAIGnB,IAJH,CAKE,UAAAoB,MAAM,EAAI;AACR,YAAIA,MAAM,CAACC,WAAX,EAAwB;AACtBvB,UAAAA,KAAK,CAAC,SAAD,EAAY,4BAAZ,CAAL;AACD,SAFD,MAEO;AACLR,UAAAA,WAAW,CAACgC,qBAAZ,GAAoCtB,IAApC,CAAyC,UAAAuB,IAAI,EAAI;AAC/C,gBAAMC,UAAU,GAAG3C,QAAQ,CAACC,IAAT,CAAc2C,oBAAd,CAAmCD,UAAnC,CACjBD,IAAI,CAACG,WADY,CAAnB;AAGA,gBAAMA,WAAW,GAAGH,IAAI,CAACG,WAAzB;AACA5C,YAAAA,IAAI,GACD6C,oBADH,CACwBH,UADxB,EAEGxB,IAFH,CAEQ,UAAAoB,MAAM,EAAI;AACd,kBAAIhB,IAAI,GAAGgB,MAAM,CAAChB,IAAlB;AACAlB,cAAAA,YAAY,CAACyB,OAAb,CACE,+CADF,EAEEe,WAFF;AAIAxC,cAAAA,YAAY,CAACyB,OAAb,CAAqB,oBAArB,EAA2CP,IAAI,CAACE,GAAhD;AACA,kBAAIsB,QAAQ,GAAG;AACbC,gBAAAA,EAAE,EAAEzB,IAAI,CAACE,GADI;AAEbwB,gBAAAA,QAAQ,EAAE1B,IAAI,CAAC2B,WAFF;AAGbpC,gBAAAA,KAAK,EAAES,IAAI,CAACT,KAHC;AAIbqC,gBAAAA,UAAU,EAAE5B,IAAI,CAAC6B;AAJJ,eAAf;;AAMA,kBAAIV,IAAI,mCACHK,QADG;AAENM,gBAAAA,aAAa,EAAE;AAFT,gBAAR;;AAIAnD,cAAAA,SAAS,GACNwB,UADH,CACc,OADd,EAEGC,GAFH,CAEOJ,IAAI,CAACE,GAFZ,EAGG6B,GAHH,CAGOZ,IAHP;;AAIA,oBAAK/B,KAAL,CAAWU,UAAX,CAAsBU,QAAtB,CAA+B;AAC7BC,gBAAAA,IAAI,EAAE,OADuB;AAE7BT,gBAAAA,IAAI,EAAEwB;AAFuB,eAA/B;AAID,aA3BH,EA4BGd,KA5BH,CA4BS,UAAAC,KAAK,EAAI;AACdjB,cAAAA,KAAK,CAAC,uBAAuBiB,KAAxB,CAAL;AACD,aA9BH;AA+BD,WApCD;AAqCD;AACF,OA/CH,EAgDE,UAAAA,KAAK,EAAI;AACPqB,QAAAA,KAAK,CAACtC,KAAN,CAAY,eAAZ,EAA6BiB,KAA7B;AACD,OAlDH;AAoDD,KAzGkB;;AAAA,UA2GnBsB,aA3GmB,GA2GH,YAAM;AACpB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;;AACAvD,MAAAA,YAAY,CAACwD,MAAb,GACGxC,IADH,CACQ,UAAAuB,IAAI,EAAI;AACZkB,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBnB,IAApB;AAEA,YAAMC,UAAU,GAAG3C,QAAQ,CAACC,IAAT,CAAc6D,kBAAd,CAAiCnB,UAAjC,CACjBD,IAAI,CAACqB,OADY,CAAnB;AAIA,YAAMlB,WAAW,GAAGH,IAAI,CAACqB,OAAzB;AACA1D,QAAAA,YAAY,CAACyB,OAAb,CACE,6CADF,EAEEe,WAFF;AAIA,eAAO5C,IAAI,GAAG6C,oBAAP,CAA4BH,UAA5B,CAAP;AACD,OAdH,EAeGxB,IAfH,CAeQ,UAAAoB,MAAM,EAAI;AACd,cAAKkB,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAd;;AACA,YAAInC,IAAI,GAAGgB,MAAM,CAAChB,IAAlB;AACAlB,QAAAA,YAAY,CAACyB,OAAb,CAAqB,oBAArB,EAA2CP,IAAI,CAACE,GAAhD;AACA,YAAIsB,QAAQ,GAAG;AACbC,UAAAA,EAAE,EAAEzB,IAAI,CAACE,GADI;AAEbwB,UAAAA,QAAQ,EAAE1B,IAAI,CAAC2B,WAFF;AAGbpC,UAAAA,KAAK,EAAES,IAAI,CAACT,KAHC;AAIbsC,UAAAA,QAAQ,EAAE7B,IAAI,CAAC6B;AAJF,SAAf;;AAMA,YAAIV,IAAI,mCACHK,QADG;AAENM,UAAAA,aAAa,EAAE;AAFT,UAAR;;AAIAO,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBnB,IAApB;AACAxC,QAAAA,SAAS,GACNwB,UADH,CACc,OADd,EAEGC,GAFH,CAEOJ,IAAI,CAACE,GAFZ,EAGG6B,GAHH,CAGOZ,IAHP;;AAIA,cAAK/B,KAAL,CAAWU,UAAX,CAAsBU,QAAtB,CAA+B;AAC7BC,UAAAA,IAAI,EAAE,OADuB;AAE7BT,UAAAA,IAAI,EAAEwB;AAFuB,SAA/B;AAID,OAtCH,EAuCGd,KAvCH,CAuCS,UAAAC,KAAK,EAAI;AAAA,YACNC,IADM,GACYD,KADZ,CACNC,IADM;AAAA,YACAC,OADA,GACYF,KADZ,CACAE,OADA;;AAEd,cAAKqB,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAd,EAAkC,YAAM;AACtCzC,UAAAA,KAAK,CAACiB,KAAD,CAAL;AACD,SAFD;AAGD,OA5CH;AA6CD,KA1JkB;;AAEjB,UAAKrB,KAAL,GAAa;AACX6C,MAAAA,OAAO,EAAE,KADE;AAEX5C,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKAZ,IAAAA,YAAY,CAAC6D,SAAb,CAAuB;AACrBC,MAAAA,WAAW,EACT;AAFmB,KAAvB;AAPiB;AAWlB;;;;WAiJD,kBAAS;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACD,MAAM,CAACE,KAAR,EAAeF,MAAM,CAACG,SAAtB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEJ,MAAM,CAACK,IADhB;AAEE,QAAA,WAAW,EAAC,wBAFd;AAGE,QAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,iBAAI,MAAI,CAACf,QAAL,CAAc;AAAE3C,YAAAA,KAAK,EAAE0D;AAAT,WAAd,CAAJ;AAAA,SAHpB;AAIE,QAAA,KAAK,EAAE,KAAK3D,KAAL,CAAWC,KAJpB;AAKE,QAAA,oBAAoB,EAAEf,SAAS,CAAC0E,KAAV,CAAgBC,IALxC;AAME,QAAA,qBAAqB,EAAC,aANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,EAYE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACI,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAEJ,MAAM,CAACK,IADhB;AAEE,QAAA,eAAe,EAAE,IAFnB;AAGE,QAAA,WAAW,EAAC,UAHd;AAIE,QAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,iBAAI,MAAI,CAACf,QAAL,CAAc;AAAE1C,YAAAA,QAAQ,EAAEyD;AAAZ,WAAd,CAAJ;AAAA,SAJpB;AAKE,QAAA,KAAK,EAAE,KAAK3D,KAAL,CAAWE,QALpB;AAME,QAAA,oBAAoB,EAAEhB,SAAS,CAAC0E,KAAV,CAAgBC,IANxC;AAOE,QAAA,qBAAqB,EAAC,aAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAZF,EAuBE,oBAAC,MAAD;AACE,QAAA,cAAc,EAAER,MAAM,CAACS,cADzB;AAEE,QAAA,KAAK,EAAET,MAAM,CAACU,SAFhB;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAChE,YAAL,EAAN;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBF,EA8BE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEsD,MAAM,CAACW,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BF,EA+BE,oBAAC,MAAD;AACE,QAAA,cAAc,EAAEX,MAAM,CAACY,iBADzB;AAEE,QAAA,KAAK,EAAEZ,MAAM,CAACa,YAFhB;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC1C,eAAL,EAAN;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BA/BF,EAsCG,KAAKxB,KAAL,CAAW6C,OAAX,GACC,oBAAC,iBAAD;AACE,QAAA,KAAK,EAAE;AAAEsB,UAAAA,SAAS,EAAE;AAAb,SADT;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,SAAS,EAAE,KAAKnE,KAAL,CAAW6C,OAHxB;AAIE,QAAA,KAAK,EAAE3D,SAAS,CAAC0E,KAAV,CAAgBQ,IAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAQC,oBAAC,kBAAD;AACE,QAAA,KAAK,EAAEf,MAAM,CAACgB,eADhB;AAEE,QAAA,IAAI,EAAE9E,kBAAkB,CAAC+E,IAAnB,CAAwBC,IAFhC;AAGE,QAAA,KAAK,EAAEhF,kBAAkB,CAACiF,KAAnB,CAAyBC,KAHlC;AAIE,QAAA,OAAO,EAAE,KAAK9B,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9CJ,CADF;AAwDD;;;;EAtNuB3D,KAAK,CAAC0F,S;;AAyNhC,IAAMrB,MAAM,GAAGsB,UAAU,CAACC,MAAX,CAAkB;AAC/BtB,EAAAA,SAAS,EAAE;AACTuB,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE;AAFH,GADoB;AAK/Bd,EAAAA,EAAE,EAAE;AACFe,IAAAA,UAAU,EAAE7F,SAAS,CAAC8F,QAAV,CAAmBC,IAD7B;AAEFrB,IAAAA,KAAK,EAAE,OAFL;AAGFO,IAAAA,SAAS,EAAE,EAHT;AAIFe,IAAAA,YAAY,EAAE;AAJZ,GAL2B;AAW/B3B,EAAAA,KAAK,EAAE;AACL4B,IAAAA,QAAQ,EAAEjG,SAAS,CAACiG,QAAV,CAAmB5B,KADxB;AAEL6B,IAAAA,UAAU,EAAE,MAFP;AAGLxB,IAAAA,KAAK,EAAE1E,SAAS,CAAC0E,KAAV,CAAgBQ,IAHlB;AAILD,IAAAA,SAAS,EAAE,EAJN;AAKLe,IAAAA,YAAY,EAAE;AALT,GAXwB;AAkB/B1B,EAAAA,SAAS,EAAE;AACT6B,IAAAA,SAAS,EAAE,SADF;AAETC,IAAAA,SAAS,EAAE,MAFF;AAGTC,IAAAA,UAAU,EAAE;AAHH,GAlBoB;AAuB/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WAAW,EAAE,EADN;AAEPC,IAAAA,YAAY,EAAE,EAFP;AAGPJ,IAAAA,SAAS,EAAE,QAHJ;AAIPH,IAAAA,QAAQ,EAAEjG,SAAS,CAACiG,QAAV,CAAmBK,OAJtB;AAKP5B,IAAAA,KAAK,EAAE1E,SAAS,CAAC0E,KAAV,CAAgBD;AALhB,GAvBsB;AA8B/BG,EAAAA,cAAc,EAAE;AACd6B,IAAAA,KAAK,EAAEzG,SAAS,CAAC0G,WAAV,CAAsBX,IADf;AAEdY,IAAAA,eAAe,EAAE3G,SAAS,CAAC0E,KAAV,CAAgBQ,IAFnB;AAGd0B,IAAAA,YAAY,EAAE5G,SAAS,CAAC4G,YAAV,CAAuBb,IAHvB;AAIdc,IAAAA,OAAO,EAAE,EAJK;AAKd5B,IAAAA,SAAS,EAAE;AALG,GA9Be;AAqC/BJ,EAAAA,SAAS,EAAE;AACTH,IAAAA,KAAK,EAAE1E,SAAS,CAAC0E,KAAV,CAAgBoC;AADd,GArCoB;AAwC/BC,EAAAA,WAAW,EAAE;AACXlB,IAAAA,UAAU,EAAE7F,SAAS,CAAC8F,QAAV,CAAmBrB,IADpB;AAEXC,IAAAA,KAAK,EAAE;AAFI,GAxCkB;AA4C/BH,EAAAA,cAAc,EAAE;AACdkC,IAAAA,KAAK,EAAEzG,SAAS,CAACgH,cAAV,CAAyBjB,IADlB;AAEdd,IAAAA,SAAS,EAAE,EAFG;AAGdgC,IAAAA,WAAW,EAAE,CAHC;AAIdC,IAAAA,WAAW,EAAE,OAJC;AAKdC,IAAAA,WAAW,EAAEnH,SAAS,CAAC0E,KAAV,CAAgBC,IALf;AAMdiC,IAAAA,YAAY,EAAE5G,SAAS,CAAC4G,YAAV,CAAuBb;AANvB,GA5Ce;AAoD/BvB,EAAAA,IAAI,EAAE;AACJ4C,IAAAA,MAAM,EAAE,EADJ;AAEJb,IAAAA,WAAW,EAAE,EAFT;AAGJC,IAAAA,YAAY,EAAE,EAHV;AAIJ9B,IAAAA,KAAK,EAAE1E,SAAS,CAAC0E,KAAV,CAAgBD;AAJnB,GApDyB;AA0D/BM,EAAAA,iBAAiB,EAAE;AACjB0B,IAAAA,KAAK,EAAE,GADU;AAEjBE,IAAAA,eAAe,EAAE3G,SAAS,CAAC0E,KAAV,CAAgB2C,QAFhB;AAGjBT,IAAAA,YAAY,EAAE5G,SAAS,CAAC4G,YAAV,CAAuBb,IAHpB;AAIjBc,IAAAA,OAAO,EAAE,EAJQ;AAKjB5B,IAAAA,SAAS,EAAE;AALM,GA1DY;AAiE/BD,EAAAA,YAAY,EAAE;AACZN,IAAAA,KAAK,EAAE1E,SAAS,CAAC0E,KAAV,CAAgBoC;AADX,GAjEiB;AAoE/B3B,EAAAA,eAAe,EAAE;AACfsB,IAAAA,KAAK,EAAE,GADQ;AAEfW,IAAAA,MAAM,EAAE,EAFO;AAGfnC,IAAAA,SAAS,EAAE;AAHI,GApEc;AAyE/BqC,EAAAA,UAAU,EAAE;AACV5C,IAAAA,KAAK,EAAE1E,SAAS,CAAC0E,KAAV,CAAgBoC;AADb;AAzEmB,CAAlB,CAAf;AA8EA,eAAenG,WAAf","sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  Alert,\n  ActivityIndicator\n} from \"react-native\";\nimport Button from \"react-native-button\";\nimport { AppStyles } from \"../AppStyles\";\nimport firebase from '@react-native-firebase/app';\nimport auth from '@react-native-firebase/auth';\nimport firestore from '@react-native-firebase/firestore'\nimport { GoogleSignin, GoogleSigninButton } from \"react-native-google-signin\";\nimport { AsyncStorage } from \"react-native\";\nconst FBSDK = require(\"react-native-fbsdk\");\nconst { LoginManager, AccessToken } = FBSDK;\n\nclass LoginScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      email: \"\",\n      password: \"\"\n    };\n    GoogleSignin.configure({\n      webClientId:\n        \"706061484183-l0l58dds4kg329fh1trbiha1ci5rqm5n.apps.googleusercontent.com\"\n    });\n  }\n\n  onPressLogin = () => {\n    const { email, password } = this.state;\n    if (email.length <= 0 || password.length <= 0) {\n      alert(\"Please fill out the required fields.\");\n      return;\n    }\n    auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(response => {\n        const { navigation } = this.props;\n        user_uid = response.user._user.uid;\n        firestore()\n          .collection(\"users\")\n          .doc(user_uid)\n          .get()\n          .then(function(user) {\n            if (user.exists) {\n              AsyncStorage.setItem(\"@loggedInUserID:id\", user_uid);\n              AsyncStorage.setItem(\"@loggedInUserID:key\", email);\n              AsyncStorage.setItem(\"@loggedInUserID:password\", password);\n              navigation.dispatch({ type: \"Login\", user: user });\n            } else {\n              alert(\"User does not exist. Please try again.\");\n            }\n          })\n          .catch(function(error) {\n            const { code, message } = error;\n            alert(message);\n          });\n      })\n      .catch(error => {\n        const { code, message } = error;\n        alert(message);\n        // For details of error codes, see the docs\n        // The message contains the default Firebase string\n        // representation of the error\n      });\n  };\n\n  onPressFacebook = () => {\n    LoginManager.logInWithPermissions([\n      \"public_profile\",\n      \"user_friends\",\n      \"email\"\n    ]).then(\n      result => {\n        if (result.isCancelled) {\n          alert(\"Whoops!\", \"You cancelled the sign in.\");\n        } else {\n          AccessToken.getCurrentAccessToken().then(data => {\n            const credential = firebase.auth.FacebookAuthProvider.credential(\n              data.accessToken\n            );\n            const accessToken = data.accessToken;\n            auth()\n              .signInWithCredential(credential)\n              .then(result => {\n                var user = result.user;\n                AsyncStorage.setItem(\n                  \"@loggedInUserID:facebookCredentialAccessToken\",\n                  accessToken\n                );\n                AsyncStorage.setItem(\"@loggedInUserID:id\", user.uid);\n                var userDict = {\n                  id: user.uid,\n                  fullname: user.displayName,\n                  email: user.email,\n                  profileURL: user.photoURL\n                };\n                var data = {\n                  ...userDict,\n                  appIdentifier: \"rn-android-universal-listings\"\n                };\n                firestore()\n                  .collection(\"users\")\n                  .doc(user.uid)\n                  .set(data);\n                this.props.navigation.dispatch({\n                  type: \"Login\",\n                  user: userDict\n                });\n              })\n              .catch(error => {\n                alert(\"Please try again! \" + error);\n              });\n          });\n        }\n      },\n      error => {\n        Alert.alert(\"Sign in error\", error);\n      }\n    );\n  };\n\n  onPressGoogle = () => {\n    this.setState({ loading: true });\n    GoogleSignin.signIn()\n      .then(data => {\n        console.log(\"data\", data);\n        // Create a new Firebase credential with the token\n        const credential = firebase.auth.GoogleAuthProvider.credential(\n          data.idToken\n        );\n        // Login with the credential\n        const accessToken = data.idToken;\n        AsyncStorage.setItem(\n          \"@loggedInUserID:googleCredentialAccessToken\",\n          accessToken\n        );\n        return auth().signInWithCredential(credential);\n      })\n      .then(result => {\n        this.setState({ loading: false });\n        var user = result.user;\n        AsyncStorage.setItem(\"@loggedInUserID:id\", user.uid);\n        var userDict = {\n          id: user.uid,\n          fullname: user.displayName,\n          email: user.email,\n          photoURL: user.photoURL\n        };\n        var data = {\n          ...userDict,\n          appIdentifier: \"rn-android-universal-listings\"\n        };\n        console.log(\"data\", data);\n        firestore()\n          .collection(\"users\")\n          .doc(user.uid)\n          .set(data);\n        this.props.navigation.dispatch({\n          type: \"Login\",\n          user: userDict\n        });\n      })\n      .catch(error => {\n        const { code, message } = error;\n        this.setState({ loading: false }, () => {\n          alert(error);\n        });\n      });\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Text style={[styles.title, styles.leftTitle]}>Sign In</Text>\n        <View style={styles.InputContainer}>\n          <TextInput\n            style={styles.body}\n            placeholder=\"E-mail or phone number\"\n            onChangeText={text => this.setState({ email: text })}\n            value={this.state.email}\n            placeholderTextColor={AppStyles.color.grey}\n            underlineColorAndroid=\"transparent\"\n          />\n        </View>\n        <View style={styles.InputContainer}>\n          <TextInput\n            style={styles.body}\n            secureTextEntry={true}\n            placeholder=\"Password\"\n            onChangeText={text => this.setState({ password: text })}\n            value={this.state.password}\n            placeholderTextColor={AppStyles.color.grey}\n            underlineColorAndroid=\"transparent\"\n          />\n        </View>\n        <Button\n          containerStyle={styles.loginContainer}\n          style={styles.loginText}\n          onPress={() => this.onPressLogin()}\n        >\n          Log in\n        </Button>\n        <Text style={styles.or}>OR</Text>\n        <Button\n          containerStyle={styles.facebookContainer}\n          style={styles.facebookText}\n          onPress={() => this.onPressFacebook()}\n        >\n          Login with Facebook\n        </Button>\n        {this.state.loading ? (\n          <ActivityIndicator\n            style={{ marginTop: 30 }}\n            size=\"large\"\n            animating={this.state.loading}\n            color={AppStyles.color.tint}\n          />\n        ) : (\n          <GoogleSigninButton\n            style={styles.googleContainer}\n            size={GoogleSigninButton.Size.Wide}\n            color={GoogleSigninButton.Color.Light}\n            onPress={this.onPressGoogle}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  or: {\n    fontFamily: AppStyles.fontName.main,\n    color: \"black\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  title: {\n    fontSize: AppStyles.fontSize.title,\n    fontWeight: \"bold\",\n    color: AppStyles.color.tint,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  leftTitle: {\n    alignSelf: \"stretch\",\n    textAlign: \"left\",\n    marginLeft: 20\n  },\n  content: {\n    paddingLeft: 50,\n    paddingRight: 50,\n    textAlign: \"center\",\n    fontSize: AppStyles.fontSize.content,\n    color: AppStyles.color.text\n  },\n  loginContainer: {\n    width: AppStyles.buttonWidth.main,\n    backgroundColor: AppStyles.color.tint,\n    borderRadius: AppStyles.borderRadius.main,\n    padding: 10,\n    marginTop: 30\n  },\n  loginText: {\n    color: AppStyles.color.white\n  },\n  placeholder: {\n    fontFamily: AppStyles.fontName.text,\n    color: \"red\"\n  },\n  InputContainer: {\n    width: AppStyles.textInputWidth.main,\n    marginTop: 30,\n    borderWidth: 1,\n    borderStyle: \"solid\",\n    borderColor: AppStyles.color.grey,\n    borderRadius: AppStyles.borderRadius.main\n  },\n  body: {\n    height: 42,\n    paddingLeft: 20,\n    paddingRight: 20,\n    color: AppStyles.color.text\n  },\n  facebookContainer: {\n    width: 192,\n    backgroundColor: AppStyles.color.facebook,\n    borderRadius: AppStyles.borderRadius.main,\n    padding: 10,\n    marginTop: 30\n  },\n  facebookText: {\n    color: AppStyles.color.white\n  },\n  googleContainer: {\n    width: 192,\n    height: 48,\n    marginTop: 30\n  },\n  googleText: {\n    color: AppStyles.color.white\n  }\n});\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}