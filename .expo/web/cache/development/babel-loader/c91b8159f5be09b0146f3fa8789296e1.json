{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n// import { Camera } from 'expo-camera';\n\n// function RecordingScreen() {\n//   const [hasPermission, setHasPermission] = useState(null);\n//   const [type, setType] = useState(Camera.Constants.Type.back);\n\n//   useEffect(() => {\n//     (async () => {\n//       const { status } = await Camera.requestPermissionsAsync();\n//       setHasPermission(status === 'granted');\n//     })();\n//   }, []);\n\n//   if (hasPermission === null) {\n//     return <View />;\n//   }\n//   if (hasPermission === false) {\n//     return <Text>No access to camera</Text>;\n//   }\n//   return (\n//     <View style={styles.container}>\n//       <Camera style={styles.camera} type={type}>\n//         <View style={styles.buttonContainer}>\n//           <TouchableOpacity\n//             style={styles.button}\n//             onPress={() => {\n//               setType(\n//                 type === Camera.Constants.Type.back\n//                   ? Camera.Constants.Type.front\n//                   : Camera.Constants.Type.back\n//               );\n//             }}>\n//             <Text style={styles.text}> Flip </Text>\n//           </TouchableOpacity>\n//         </View>\n//       </Camera>\n//     </View>\n//   );\n// }\n\n\n// export default RecordingScreen;"]},"metadata":{},"sourceType":"script"}