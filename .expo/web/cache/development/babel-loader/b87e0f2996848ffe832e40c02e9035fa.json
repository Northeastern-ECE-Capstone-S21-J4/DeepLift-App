{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport { stripTrailingSlash } from \"../../lib/common\";\nvar PATH_NAMES = {\n  MAIN_BUNDLE: 'MAIN_BUNDLE_PATH',\n  CACHES_DIRECTORY: 'CACHES_DIRECTORY_PATH',\n  DOCUMENT_DIRECTORY: 'DOCUMENT_DIRECTORY_PATH',\n  EXTERNAL_DIRECTORY: 'EXTERNAL_DIRECTORY_PATH',\n  EXTERNAL_STORAGE_DIRECTORY: 'EXTERNAL_STORAGE_DIRECTORY_PATH',\n  TEMP_DIRECTORY: 'TEMP_DIRECTORY_PATH',\n  LIBRARY_DIRECTORY: 'LIBRARY_DIRECTORY_PATH',\n  PICTURES_DIRECTORY: false,\n  MOVIES_DIRECTORY: false\n};\nvar PATH_FILE_TYPES = ['FILE_TYPE_REGULAR', 'FILE_TYPE_DIRECTORY'];\nvar path = {};\nvar processedPathConstants = false;\n\nfunction processPathConstants(nativeModule) {\n  if (processedPathConstants || !nativeModule) {\n    return path;\n  }\n\n  processedPathConstants = true;\n  var entries = Object.entries(PATH_NAMES);\n\n  var _loop = function _loop(i) {\n    var _entries$i = _slicedToArray(entries[i], 2),\n        newName = _entries$i[0],\n        oldName = _entries$i[1];\n\n    path[newName] = nativeModule[newName] ? stripTrailingSlash(nativeModule[newName]) : null;\n\n    if (oldName) {\n      Object.defineProperty(path, \"\" + oldName, {\n        get: function get() {\n          console.warn(\"'firebase.utils.Native.\" + oldName + \"' is deprecated and will be removed in 6.1.0 please use 'firebase.utils.FilePath.\" + newName + \"' instead\");\n          return path[newName];\n        }\n      });\n    }\n  };\n\n  for (var i = 0; i < entries.length; i++) {\n    _loop(i);\n  }\n\n  for (var _i = 0; _i < PATH_FILE_TYPES.length; _i++) {\n    var pathFileType = PATH_FILE_TYPES[_i];\n    path[pathFileType] = stripTrailingSlash(nativeModule[pathFileType]);\n    var deprecatedFileTypeName = pathFileType.replace('_', '');\n    path[deprecatedFileTypeName] = path[pathFileType];\n  }\n\n  Object.freeze(path);\n  return path;\n}\n\nexport default {\n  SDK_VERSION: require(\"./../version\"),\n\n  get FilePath() {\n    return processPathConstants(NativeModules.RNFBUtilsModule);\n  },\n\n  get Native() {\n    return processPathConstants(NativeModules.RNFBUtilsModule);\n  }\n\n};","map":{"version":3,"sources":["/Users/630556369qqcom/Desktop/DeepLift-App/node_modules/@react-native-firebase/app/lib/utils/UtilsStatics.js"],"names":["stripTrailingSlash","PATH_NAMES","MAIN_BUNDLE","CACHES_DIRECTORY","DOCUMENT_DIRECTORY","EXTERNAL_DIRECTORY","EXTERNAL_STORAGE_DIRECTORY","TEMP_DIRECTORY","LIBRARY_DIRECTORY","PICTURES_DIRECTORY","MOVIES_DIRECTORY","PATH_FILE_TYPES","path","processedPathConstants","processPathConstants","nativeModule","entries","Object","i","newName","oldName","defineProperty","get","console","warn","length","pathFileType","deprecatedFileTypeName","replace","freeze","SDK_VERSION","require","FilePath","NativeModules","RNFBUtilsModule","Native"],"mappings":";;AAmBA,SAASA,kBAAT;AAGA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,WAAW,EAAE,kBADI;AAEjBC,EAAAA,gBAAgB,EAAE,uBAFD;AAGjBC,EAAAA,kBAAkB,EAAE,yBAHH;AAIjBC,EAAAA,kBAAkB,EAAE,yBAJH;AAKjBC,EAAAA,0BAA0B,EAAE,iCALX;AAMjBC,EAAAA,cAAc,EAAE,qBANC;AAOjBC,EAAAA,iBAAiB,EAAE,wBAPF;AAQjBC,EAAAA,kBAAkB,EAAE,KARH;AASjBC,EAAAA,gBAAgB,EAAE;AATD,CAAnB;AAYA,IAAMC,eAAe,GAAG,CAAC,mBAAD,EAAsB,qBAAtB,CAAxB;AAEA,IAAMC,IAAI,GAAG,EAAb;AACA,IAAIC,sBAAsB,GAAG,KAA7B;;AAEA,SAASC,oBAAT,CAA8BC,YAA9B,EAA4C;AAC1C,MAAIF,sBAAsB,IAAI,CAACE,YAA/B,EAA6C;AAC3C,WAAOH,IAAP;AACD;;AACDC,EAAAA,sBAAsB,GAAG,IAAzB;AAEA,MAAMG,OAAO,GAAGC,MAAM,CAACD,OAAP,CAAef,UAAf,CAAhB;;AAN0C,6BAOjCiB,CAPiC;AAAA,oCAQbF,OAAO,CAACE,CAAD,CARM;AAAA,QAQjCC,OARiC;AAAA,QAQxBC,OARwB;;AASxCR,IAAAA,IAAI,CAACO,OAAD,CAAJ,GAAgBJ,YAAY,CAACI,OAAD,CAAZ,GAAwBnB,kBAAkB,CAACe,YAAY,CAACI,OAAD,CAAb,CAA1C,GAAoE,IAApF;;AAGA,QAAIC,OAAJ,EAAa;AACXH,MAAAA,MAAM,CAACI,cAAP,CAAsBT,IAAtB,OAA+BQ,OAA/B,EAA0C;AACxCE,QAAAA,GADwC,iBAClC;AACJC,UAAAA,OAAO,CAACC,IAAR,6BAC4BJ,OAD5B,yFACuHD,OADvH;AAIA,iBAAOP,IAAI,CAACO,OAAD,CAAX;AACD;AAPuC,OAA1C;AASD;AAtBuC;;AAO1C,OAAK,IAAID,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACS,MAA5B,EAAoCP,CAAC,EAArC,EAAyC;AAAA,UAAhCA,CAAgC;AAgBxC;;AAED,OAAK,IAAIA,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGP,eAAe,CAACc,MAApC,EAA4CP,EAAC,EAA7C,EAAiD;AAC/C,QAAMQ,YAAY,GAAGf,eAAe,CAACO,EAAD,CAApC;AACAN,IAAAA,IAAI,CAACc,YAAD,CAAJ,GAAqB1B,kBAAkB,CAACe,YAAY,CAACW,YAAD,CAAb,CAAvC;AAGA,QAAMC,sBAAsB,GAAGD,YAAY,CAACE,OAAb,CAAqB,GAArB,EAA0B,EAA1B,CAA/B;AACAhB,IAAAA,IAAI,CAACe,sBAAD,CAAJ,GAA+Bf,IAAI,CAACc,YAAD,CAAnC;AACD;;AAEDT,EAAAA,MAAM,CAACY,MAAP,CAAcjB,IAAd;AAEA,SAAOA,IAAP;AACD;;AAED,eAAe;AACbkB,EAAAA,WAAW,EAAEC,OAAO,gBADP;;AAEb,MAAIC,QAAJ,GAAe;AAEb,WAAOlB,oBAAoB,CAACmB,aAAa,CAACC,eAAf,CAA3B;AACD,GALY;;AAOb,MAAIC,MAAJ,GAAa;AAEX,WAAOrB,oBAAoB,CAACmB,aAAa,CAACC,eAAf,CAA3B;AACD;;AAVY,CAAf","sourcesContent":["/* eslint-disable no-console */\n/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { NativeModules } from 'react-native';\nimport { stripTrailingSlash } from '../../lib/common';\n\n// TODO(salakar) refactor once deprecations have been removed\nconst PATH_NAMES = {\n  MAIN_BUNDLE: 'MAIN_BUNDLE_PATH',\n  CACHES_DIRECTORY: 'CACHES_DIRECTORY_PATH',\n  DOCUMENT_DIRECTORY: 'DOCUMENT_DIRECTORY_PATH',\n  EXTERNAL_DIRECTORY: 'EXTERNAL_DIRECTORY_PATH',\n  EXTERNAL_STORAGE_DIRECTORY: 'EXTERNAL_STORAGE_DIRECTORY_PATH',\n  TEMP_DIRECTORY: 'TEMP_DIRECTORY_PATH',\n  LIBRARY_DIRECTORY: 'LIBRARY_DIRECTORY_PATH',\n  PICTURES_DIRECTORY: false,\n  MOVIES_DIRECTORY: false,\n};\n\nconst PATH_FILE_TYPES = ['FILE_TYPE_REGULAR', 'FILE_TYPE_DIRECTORY'];\n\nconst path = {};\nlet processedPathConstants = false;\n\nfunction processPathConstants(nativeModule) {\n  if (processedPathConstants || !nativeModule) {\n    return path;\n  }\n  processedPathConstants = true;\n\n  const entries = Object.entries(PATH_NAMES);\n  for (let i = 0; i < entries.length; i++) {\n    const [newName, oldName] = entries[i];\n    path[newName] = nativeModule[newName] ? stripTrailingSlash(nativeModule[newName]) : null;\n\n    // TODO(salakar) deprecated remove in 6.1.0:\n    if (oldName) {\n      Object.defineProperty(path, `${oldName}`, {\n        get() {\n          console.warn(\n            `'firebase.utils.Native.${oldName}' is deprecated and will be removed in 6.1.0 please use 'firebase.utils.FilePath.${newName}' instead`,\n          );\n\n          return path[newName];\n        },\n      });\n    }\n  }\n\n  for (let i = 0; i < PATH_FILE_TYPES.length; i++) {\n    const pathFileType = PATH_FILE_TYPES[i];\n    path[pathFileType] = stripTrailingSlash(nativeModule[pathFileType]);\n\n    // TODO(salakar) deprecated remove in 6.1.0:\n    const deprecatedFileTypeName = pathFileType.replace('_', '');\n    path[deprecatedFileTypeName] = path[pathFileType];\n  }\n\n  Object.freeze(path);\n\n  return path;\n}\n\nexport default {\n  SDK_VERSION: require('./../version'),\n  get FilePath() {\n    // TODO move from storage native code into utils native code\n    return processPathConstants(NativeModules.RNFBUtilsModule);\n  },\n  // TODO(salakar) deprecated remove in 6.1.0:\n  get Native() {\n    // TODO move from storage native code into utils native code\n    return processPathConstants(NativeModules.RNFBUtilsModule);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}