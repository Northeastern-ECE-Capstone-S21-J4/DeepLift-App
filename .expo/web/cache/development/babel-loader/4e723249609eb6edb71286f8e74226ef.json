{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/630556369qqcom/Desktop/DeepLift-App/node_modules/react-native-fbsdk/js/FBLoginButton.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar LoginButton = function (_React$Component) {\n  _inherits(LoginButton, _React$Component);\n\n  var _super = _createSuper(LoginButton);\n\n  function LoginButton() {\n    _classCallCheck(this, LoginButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LoginButton, [{\n    key: \"_eventHandler\",\n    value: function _eventHandler(event) {\n      var eventDict = event.nativeEvent;\n\n      if (eventDict.type === 'loginFinished') {\n        if (this.props.onLoginFinished) {\n          this.props.onLoginFinished(eventDict.error, eventDict.result);\n        }\n      } else if (eventDict.type === 'logoutFinished') {\n        if (this.props.onLogoutFinished) {\n          this.props.onLogoutFinished();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(RCTFBLoginButton, _extends({}, this.props, {\n        onChange: this._eventHandler.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return LoginButton;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  defaultButtonStyle: {\n    height: 30,\n    width: 190\n  }\n});\nLoginButton.defaultProps = {\n  style: styles.defaultButtonStyle\n};\nvar RCTFBLoginButton = requireNativeComponent('RCTFBLoginButton');\nmodule.exports = LoginButton;","map":{"version":3,"sources":["/Users/630556369qqcom/Desktop/DeepLift-App/node_modules/react-native-fbsdk/js/FBLoginButton.js"],"names":["React","requireNativeComponent","LoginButton","event","eventDict","nativeEvent","type","props","onLoginFinished","error","result","onLogoutFinished","_eventHandler","bind","Component","styles","StyleSheet","create","defaultButtonStyle","height","width","defaultProps","style","RCTFBLoginButton","module","exports"],"mappings":"AAsBA;;;;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;SACQC,sB;;;IAeFC,W;;;;;;;;;;;;;WAiDJ,uBAAcC,KAAd,EAA4B;AAC1B,UAAMC,SAAS,GAAGD,KAAK,CAACE,WAAxB;;AACA,UAAID,SAAS,CAACE,IAAV,KAAmB,eAAvB,EAAwC;AACtC,YAAI,KAAKC,KAAL,CAAWC,eAAf,EAAgC;AAC9B,eAAKD,KAAL,CAAWC,eAAX,CAA2BJ,SAAS,CAACK,KAArC,EAA4CL,SAAS,CAACM,MAAtD;AACD;AACF,OAJD,MAIO,IAAIN,SAAS,CAACE,IAAV,KAAmB,gBAAvB,EAAyC;AAC9C,YAAI,KAAKC,KAAL,CAAWI,gBAAf,EAAiC;AAC/B,eAAKJ,KAAL,CAAWI,gBAAX;AACD;AACF;AACF;;;WAED,kBAAS;AACP,aACE,oBAAC,gBAAD,eACM,KAAKJ,KADX;AAEE,QAAA,QAAQ,EAAE,KAAKK,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAMD;;;;EArEuBb,KAAK,CAACc,S;;AAwEhC,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,MAAM,EAAE,EADU;AAElBC,IAAAA,KAAK,EAAE;AAFW;AADW,CAAlB,CAAf;AAOAlB,WAAW,CAACmB,YAAZ,GAA2B;AACzBC,EAAAA,KAAK,EAAEP,MAAM,CAACG;AADW,CAA3B;AAIA,IAAMK,gBAAgB,GAAGtB,sBAAsB,CAAC,kBAAD,CAA/C;AAEAuB,MAAM,CAACC,OAAP,GAAiBvB,WAAjB","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,\n * copy, modify, and distribute this software in source code or binary form for use\n * in connection with the web services and APIs provided by Facebook.\n *\n * As with any software that integrates with the Facebook platform, your use of\n * this software is subject to the Facebook Developer Principles and Policies\n * [http://developers.facebook.com/policy/]. This copyright notice shall be\n * included in all copies or substantial portions of the software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @flow\n * @format\n */\n'use strict';\n\nimport * as React from 'react';\nimport {requireNativeComponent, StyleSheet} from 'react-native';\n\nimport type {\n  DefaultAudience,\n  LoginBehaviorAndroid,\n  LoginBehaviorIOS,\n  LoginResult,\n} from './FBLoginManager';\n\ntype Event = Object;\ntype TooltipBehaviorIOS = 'auto' | 'force_display' | 'disable';\n\n/**\n * A button that initiates a log in or log out flow upon tapping.\n */\nclass LoginButton extends React.Component<{\n  /**\n   * Represents the permissions to request when the login button\n   * is pressed.\n   */\n  permissions?: Array<string>,\n\n  /**\n   * The callback invoked upon error/completion of a login request.\n   */\n  onLoginFinished?: (error: Object, result: LoginResult) => void,\n\n  /**\n   * The callback invoked upon completion of a logout request.\n   */\n  onLogoutFinished?: () => void,\n\n  /**\n   * The behavior to use when attempting a login.\n   * @platform android\n   */\n  loginBehaviorAndroid?: LoginBehaviorAndroid,\n\n  /**\n   * The behavior to use when attempting a login.\n   * @platform ios\n   */\n  loginBehaviorIOS?: LoginBehaviorIOS,\n\n  /**\n   * The default audience to target when attempting a login.\n   */\n  defaultAudience?: DefaultAudience,\n\n  /**\n   * For iOS only, the desired tooltip behavior.\n   * @platform ios\n   */\n  tooltipBehaviorIOS?: TooltipBehaviorIOS,\n\n  /**\n   * View style, if any.\n   */\n  style?: any,\n}> {\n  static defaultProps: {\n    style: typeof styles.defaultButtonStyle,\n  };\n\n  _eventHandler(event: Event) {\n    const eventDict = event.nativeEvent;\n    if (eventDict.type === 'loginFinished') {\n      if (this.props.onLoginFinished) {\n        this.props.onLoginFinished(eventDict.error, eventDict.result);\n      }\n    } else if (eventDict.type === 'logoutFinished') {\n      if (this.props.onLogoutFinished) {\n        this.props.onLogoutFinished();\n      }\n    }\n  }\n\n  render() {\n    return (\n      <RCTFBLoginButton\n        {...this.props}\n        onChange={this._eventHandler.bind(this)}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  defaultButtonStyle: {\n    height: 30,\n    width: 190,\n  },\n});\n\nLoginButton.defaultProps = {\n  style: styles.defaultButtonStyle,\n};\n\nconst RCTFBLoginButton = requireNativeComponent('RCTFBLoginButton');\n\nmodule.exports = LoginButton;\n"]},"metadata":{},"sourceType":"module"}