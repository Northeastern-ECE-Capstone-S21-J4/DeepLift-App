{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/sam/Capstone/DeepLift-App/app/screens/SetInformationScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Picker } from '@react-native-picker/picker';\n\nvar SetInformationScreen = function (_Component) {\n  _inherits(SetInformationScreen, _Component);\n\n  var _super = _createSuper(SetInformationScreen);\n\n  function SetInformationScreen() {\n    var _this;\n\n    _classCallCheck(this, SetInformationScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      exercise: 'Squat',\n      reps: '0'\n    };\n\n    _this.handleReps = function (text) {\n      if (text.charAt(0) == '0') {\n        _this.setState({\n          reps: text.substring(1)\n        });\n\n        return;\n      }\n\n      _this.setState({\n        reps: text\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SetInformationScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(SafeAreaView, {\n        style: styles.area,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.previewBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }), React.createElement(View, {\n        style: styles.uiBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.infoEnterBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }, React.createElement(Picker, {\n        selectedValue: this.state.exercise,\n        style: styles.picker,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          return _this2.setState({\n            exercise: itemValue\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }\n      }, React.createElement(Picker.Item, {\n        label: \"Squats\",\n        value: \"Squats\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Bench Press\",\n        value: \"Bench Press\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }\n      }), React.createElement(Picker.Item, {\n        label: \"Dead Lifts\",\n        value: \"Dead Lifts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }\n      })), React.createElement(TextInput, {\n        keyboardType: \"numeric\",\n        style: styles.repBox,\n        value: this.state.reps,\n        onChangeText: this.handleReps,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.submitButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return SetInformationScreen;\n}(Component);\n\nexport { SetInformationScreen as default };\nvar styles = StyleSheet.create({\n  area: {\n    flex: 1,\n    flexDirection: \"column\"\n  },\n  previewBox: {\n    flex: 3,\n    backgroundColor: \"black\",\n    color: \"white\"\n  },\n  uiBox: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\"\n  },\n  infoEnterBox: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: 'center',\n    alignContent: 'center',\n    marginTop: '3%'\n  },\n  picker: {\n    flex: 4,\n    borderWidth: 2,\n    borderColor: \"black\"\n  },\n  repBox: {\n    flex: 1,\n    textAlign: 'center',\n    borderWidth: 1,\n    borderColor: 'black'\n  },\n  submitButton: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/home/sam/Capstone/DeepLift-App/app/screens/SetInformationScreen.js"],"names":["React","Component","Picker","SetInformationScreen","state","exercise","reps","handleReps","text","charAt","setState","substring","styles","area","previewBox","uiBox","infoEnterBox","picker","itemValue","itemIndex","repBox","submitButton","StyleSheet","create","flex","flexDirection","backgroundColor","color","alignItems","justifyContent","alignContent","marginTop","borderWidth","borderColor","textAlign","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { SafeAreaView, Text, View, StyleSheet, TextInput, TouchableOpacity } from 'react-native'\nimport { Picker } from '@react-native-picker/picker'\n\nexport default class SetInformationScreen extends Component {\n    state = {\n        exercise: 'Squat',\n        reps: '0'\n    };\n\n    handleReps = (text) => {\n        if (text.charAt(0) == '0') {\n            this.setState({ reps: text.substring(1)})\n            return;\n        }\n        this.setState({ reps: text })\n    };\n\n    //TODO: previewBox will display a preview of the recorded workout\n    render() {\n        return (\n            <SafeAreaView style={styles.area}>\n                <View style={styles.previewBox}></View>\n                <View style={styles.uiBox}>\n                    <View style={styles.infoEnterBox}>\n                        <Picker \n                            selectedValue={this.state.exercise}\n                            style={styles.picker}\n                            onValueChange={(itemValue, itemIndex) =>\n                                this.setState({exercise: itemValue})\n                            }>\n                            <Picker.Item label=\"Squats\" value=\"Squats\"/>\n                            <Picker.Item label=\"Bench Press\" value=\"Bench Press\"/>\n                            <Picker.Item label=\"Dead Lifts\" value=\"Dead Lifts\"/>\n                        </Picker>\n                        <TextInput \n                            keyboardType=\"numeric\"\n                            style={styles.repBox}\n                            value={this.state.reps}\n                            onChangeText={this.handleReps}/>\n                    </View>\n                    <TouchableOpacity\n                        style={styles.submitButton}>\n                        <Text>Submit</Text>\n                    </TouchableOpacity>\n                </View>\n            </SafeAreaView>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    area: {\n        flex: 1,\n        flexDirection: \"column\"\n    },\n    previewBox: {\n        flex: 3,\n        backgroundColor: \"black\",\n        color: \"white\"\n    },\n    uiBox: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"column\"\n    },\n    infoEnterBox: {\n        flex: 1,\n        flexDirection: \"row\",\n        justifyContent: 'center',\n        alignContent: 'center',\n        marginTop: '3%'\n    },\n    picker: {\n        flex: 4,\n        borderWidth: 2,\n        borderColor: \"black\"\n    },\n    repBox: {\n        flex: 1,\n        textAlign: 'center',\n        borderWidth: 1,\n        borderColor: 'black',\n    },\n    submitButton: {\n        flex: 1,\n        width: '100%',\n        alignItems: 'center'\n    }\n})\n\n"]},"metadata":{},"sourceType":"module"}